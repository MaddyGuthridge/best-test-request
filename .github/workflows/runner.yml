name: Run benchmark

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 * *'

# Make sure deploy-pages has necessary permissions to deploy to GitHub Pages
permissions:
  pages: write
  id-token: write

# Cancel older deploy workflow when more than one is running
concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  Benchmark:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }} # Output URL after the workflow has finished
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - uses: Gr1N/setup-poetry@v8
    - uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
    - run: poetry --version
    - name: Install Python dependencies
      run: poetry install
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    - name: Install JS dependencies
      run: npm ci
    - run: mkdir -p results site
    - name: Run benchmark
      run: |
        timeout --signal=SIGINT 20m poetry run python runner.py > results/index.md
    - name: Write to job
      run: cat results/index.md | tee -a $GITHUB_STEP_SUMMARY
    - name: Convert output to HTML
      run: poetry run python -m markdown2 results/index.md > site/index.html
    # Upload artifact from the ./build/ directory using the expected format for GitHub Pages
    - name: Upload Artifact
      id: upload
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./site/
    # Use previously uploaded artifact to deploy to GitHub Pages
    - name: Deploy
      id: deploy
      uses: actions/deploy-pages@v4
